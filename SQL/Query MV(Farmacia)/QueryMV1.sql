CREATE TABLE DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS NUMBER,
NM_OBJETO VARCHAR2(30),
DT_AUDIT_SUPRIMENTOS  DATE           DEFAULT SYSDATE NULL,
TP_OPERACAO_PROCESSO  VARCHAR2(30)   NULL,
DS_USUARIO_PROCESSO  VARCHAR2(3000) NULL,
DS_USUARIO_LOGADO  VARCHAR2(3000) NULL,
DS_OPERACAO_REALIZADA   VARCHAR2(3000) NULL,
DS_TELA_PROCESSO        VARCHAR2(3000) NULL,
DS_HOST_PROCESSO        VARCHAR2(3000) NULL,
TP_OBJETO VARCHAR2(30) NULL,
DS_COMANDO VARCHAR2(200) NULL,
CD_SID   NUMBER,
CD_STATUS_PROCESSO NUMBER,
SN_PROCESSADO VARCHAR2(1) DEFAULT 'N',
CD_INVENTARIO NUMBER,
CD_INVENTARIO_OLD NUMBER,
DT_APROVACAO DATE,
DT_APROVACAO_OLD DATE,
TP_SITUACAO_CONTAGEM CHAR,
TP_SITUACAO_CONTAGEM_OLD CHAR,
CD_CONTAGEM NUMBER,
CD_CONTAGEM_OLD NUMBER,
CD_ESTOQUE NUMBER,
CD_ESTOQUE_OLD NUMBER,
DT_CONTAGEM DATE,
DT_CONTAGEM_OLD DATE,
SN_ABERTO VARCHAR2( 1 ) ,
SN_ABERTO_OLD VARCHAR2( 1 ) ,
DT_GERACAO DATE,
DT_GERACAO_OLD DATE,
TP_CONTAGEM VARCHAR2( 1 ) ,
TP_CONTAGEM_OLD VARCHAR2( 1 ) ,
HR_CONTAGEM DATE,
HR_CONTAGEM_OLD DATE,
HR_GERACAO DATE,
HR_GERACAO_OLD DATE,
CD_DEVOLUCAO NUMBER,
CD_DEVOLUCAO_OLD NUMBER,
CD_ENT_PRO NUMBER,
CD_ENT_PRO_OLD NUMBER,
CD_MOT_DEV NUMBER,
CD_MOT_DEV_OLD NUMBER,
DT_DEVOLUCAO DATE,
DT_DEVOLUCAO_OLD DATE,
HR_DEVOLUCAO DATE,
HR_DEVOLUCAO_OLD DATE,
DT_EMISSAO DATE,
DT_EMISSAO_OLD DATE,
VL_TOTAL NUMBER,
VL_TOTAL_OLD NUMBER,
CD_TIP_DOC NUMBER,
CD_TIP_DOC_OLD NUMBER,
CD_CON_PAG NUMBER,
CD_CON_PAG_OLD NUMBER,
DT_ENTRADA DATE,
DT_ENTRADA_OLD DATE,
NR_DOCUMENTO VARCHAR2( 15 ) ,
NR_DOCUMENTO_OLD VARCHAR2( 15 ) ,
TP_FRETE VARCHAR2( 1 ) ,
TP_FRETE_OLD VARCHAR2( 1 ) ,
SN_ATUALIZA_PRECO VARCHAR2( 1 ) ,
SN_ATUALIZA_PRECO_OLD VARCHAR2( 1 ) ,
CD_FORNECEDOR NUMBER,
CD_FORNECEDOR_OLD NUMBER,
VL_FRETE NUMBER,
VL_FRETE_OLD NUMBER,
CD_ORD_COM NUMBER,
CD_ORD_COM_OLD NUMBER,
HR_ENTRADA DATE,
HR_ENTRADA_OLD DATE,
TP_ENTREGA VARCHAR2( 1 ) ,
TP_ENTREGA_OLD VARCHAR2( 1 ) ,
VL_DESCONTO NUMBER,
VL_DESCONTO_OLD NUMBER,
VL_IMPOSTO_ICMS NUMBER,
VL_IMPOSTO_ICMS_OLD NUMBER,
TP_DOCUMENTO_ENTRADA VARCHAR2( 1 ) ,
TP_DOCUMENTO_ENTRADA_OLD VARCHAR2( 1 ) ,
NR_SERIE VARCHAR2( 10 ) ,
NR_SERIE_OLD VARCHAR2( 10 ) ,
SN_INCLUSAO_NOTA VARCHAR2( 1 ) ,
SN_INCLUSAO_NOTA_OLD VARCHAR2( 1 ) ,
SN_CONSIGNADO VARCHAR2( 1 ) ,
SN_CONSIGNADO_OLD VARCHAR2( 1 ) ,
SN_CONTABILIZA VARCHAR2( 1 ) ,
SN_CONTABILIZA_OLD VARCHAR2( 1 ) ,
VL_OUTROS NUMBER,
VL_OUTROS_OLD NUMBER,
VL_CUSTO_MEDIO_HIST NUMBER,
VL_CUSTO_MEDIO_HIST_OLD NUMBER,
QT_KIT NUMBER,
QT_KIT_OLD NUMBER,
DSP_COD_BARRAS_LEITURA VARCHAR2( 100 ) ,
DSP_COD_BARRAS_LEITURA_OLD VARCHAR2( 100 ) ,
DT_GRAVACAO DATE,
DT_GRAVACAO_OLD DATE,
CD_LINHA NUMBER,
CD_LINHA_OLD NUMBER,
CD_PRODUTO NUMBER,
CD_PRODUTO_OLD NUMBER,
CD_UNI_PRO NUMBER,
CD_UNI_PRO_OLD NUMBER,
QT_ESTOQUE NUMBER,
QT_ESTOQUE_OLD NUMBER,
DT_VALIDADE DATE,
DT_VALIDADE_OLD DATE,
CD_LOTE VARCHAR2( 500 ) ,
CD_LOTE_OLD VARCHAR2( 500 ) ,
VL_CUSTO_MEDIO NUMBER,
VL_CUSTO_MEDIO_OLD NUMBER,
DSP_CODIGO_DE_BARRA VARCHAR2( 100 ) ,
DSP_CODIGO_DE_BARRA_OLD VARCHAR2( 100 ) ,
QT_ESTOQUE_DOADO NUMBER,
QT_ESTOQUE_DOADO_OLD NUMBER,
TP_SITUACAO VARCHAR2( 1 ) ,
TP_SITUACAO_OLD VARCHAR2( 1 ) ,
CD_SEQUENCIAL NUMBER,
CD_SEQUENCIAL_OLD NUMBER,
CD_ITDEV_FOR NUMBER,
CD_ITDEV_FOR_OLD NUMBER,
QT_DEVOLVIDA NUMBER,
QT_DEVOLVIDA_OLD NUMBER,
CD_CUSTO_MEDIO NUMBER,
CD_CUSTO_MEDIO_OLD NUMBER,
CD_ITENT_PRO NUMBER,
CD_ITENT_PRO_OLD NUMBER,
SN_ATUALIZA_PRECO_PROD VARCHAR2( 1 ) ,
SN_ATUALIZA_PRECO_PROD_OLD VARCHAR2( 1 ) ,
CD_USUARIO VARCHAR2( 40 ) ,
CD_USUARIO_OLD VARCHAR2( 40 ) ,
CD_SERIE VARCHAR2( 245 ) ,
CD_SERIE_OLD VARCHAR2( 245 ) ,
NM_USUARIO VARCHAR2( 100 ) ,
NM_USUARIO_OLD VARCHAR2( 100 ) ,
DS_CODIGO_DE_BARRA VARCHAR2( 100 ) ,
DS_CODIGO_DE_BARRA_OLD VARCHAR2( 100 ) ,
DS_COD_BARRAS_LEITURA VARCHAR2( 100 ) ,
DS_COD_BARRAS_LEITURA_OLD VARCHAR2( 100 ) ,
TP_STATUS VARCHAR2( 1 ) ,
TP_STATUS_OLD VARCHAR2( 1 ) ,
CD_LOTE_SERIE VARCHAR2( 245 ) ,
CD_LOTE_SERIE_OLD VARCHAR2( 245 ) ,
QT_ATENDIDA NUMBER,
QT_ATENDIDA_OLD NUMBER,
VL_TOTAL_CUSTO_REAL NUMBER,
VL_TOTAL_CUSTO_REAL_OLD NUMBER,
QT_TOMBADO NUMBER,
QT_TOMBADO_OLD NUMBER,
DSP_CODIGO_DE_BARRAS VARCHAR2( 100 ) ,
DSP_CODIGO_DE_BARRAS_OLD VARCHAR2( 100 ) ,
SN_PENDENCIA VARCHAR2( 1 ) ,
SN_PENDENCIA_OLD VARCHAR2( 1 ) ,
CD_ATENDIMENTO NUMBER,
CD_ATENDIMENTO_OLD NUMBER,
QT_ENTRADA NUMBER,
QT_ENTRADA_OLD NUMBER,
VL_CUSTO_REAL NUMBER,
VL_CUSTO_REAL_OLD NUMBER,
CD_CUSTO_MEDIO_MESTRE NUMBER,
CD_CUSTO_MEDIO_MESTRE_OLD NUMBER,
VL_UNITARIO NUMBER,
VL_UNITARIO_OLD NUMBER,
VL_IMPOSTO NUMBER,
VL_IMPOSTO_OLD NUMBER,
CD_ITLOT_ENT NUMBER,
CD_ITLOT_ENT_OLD NUMBER,
QT_ENT_PRO NUMBER,
QT_ENT_PRO_OLD NUMBER,
QT_DEVOLVIDO NUMBER,
QT_DEVOLVIDO_OLD NUMBER,
DS_MARCA VARCHAR2( 30 ) ,
DS_MARCA_OLD VARCHAR2( 30 ) ,
DT_VALIDADE_REG DATE,
DT_VALIDADE_REG_OLD DATE,
DT_FECHAMENTO_EMPRESTIMO DATE,
DT_FECHAMENTO_EMPRESTIMO_OLD DATE,
TP_EMPRESTIMO VARCHAR2( 3 ) ,
TP_EMPRESTIMO_OLD VARCHAR2( 3 ) ,
CD_ITMVTO_ESTOQUE NUMBER,
CD_ITMVTO_ESTOQUE_OLD NUMBER,
DH_MVTO_ESTOQUE DATE,
DH_MVTO_ESTOQUE_OLD DATE,
CD_ITSOLSAI_PRO NUMBER,
CD_ITSOLSAI_PRO_OLD NUMBER,
CD_PRODUTO_KIT NUMBER,
CD_PRODUTO_KIT_OLD NUMBER,
TP_ESTOQUE VARCHAR2( 1 ) ,
TP_ESTOQUE_OLD VARCHAR2( 1 ) ,
CD_FORMULA_KIT NUMBER,
CD_FORMULA_KIT_OLD NUMBER,
TP_ORCAMENTO VARCHAR2( 1 ) ,
TP_ORCAMENTO_OLD VARCHAR2( 1 ) ,
QT_RECEBIDO NUMBER,
QT_RECEBIDO_OLD NUMBER,
CD_MVTO_ESTOQUE NUMBER,
CD_MVTO_ESTOQUE_OLD NUMBER,
QT_MOVIMENTACAO NUMBER,
QT_MOVIMENTACAO_OLD NUMBER,
QT_MOVIMENTO NUMBER,
QT_MOVIMENTO_OLD NUMBER,
TP_PRODUTO VARCHAR2( 1 ) ,
TP_PRODUTO_OLD VARCHAR2( 1 ) ,
CD_FORMULA NUMBER,
CD_FORMULA_OLD NUMBER,
QT_ITENS_ITMVTO_ESTOQUE NUMBER,
QT_ITENS_ITMVTO_ESTOQUE_OLD NUMBER,
CD_ITMVTO_KIT NUMBER,
CD_ITMVTO_KIT_OLD NUMBER,
SN_CONF_DETERM_USU VARCHAR2( 1 ) ,
SN_CONF_DETERM_USU_OLD VARCHAR2( 1 ) ,
CD_SOLSAI_PRO NUMBER,
CD_SOLSAI_PRO_OLD NUMBER,
QT_SOLICITADO NUMBER,
QT_SOLICITADO_OLD NUMBER,
SN_ATENDIDO VARCHAR2( 1 ) ,
SN_ATENDIDO_OLD VARCHAR2( 1 ) ,
QTD_ATENDIDA NUMBER,
QTD_ATENDIDA_OLD NUMBER,
CD_PRODUTO_ATENDIDO NUMBER,
CD_PRODUTO_ATENDIDO_OLD NUMBER,
CD_ITSOLSAI_PRO_ATENDIDO NUMBER,
CD_ITSOLSAI_PRO_ATENDIDO_OLD NUMBER,
DS_MOTIVO_BLOQUEIO VARCHAR2( 155 ) ,
DS_MOTIVO_BLOQUEIO_OLD VARCHAR2( 155 ) ,
CD_LOT_PRO NUMBER,
CD_LOT_PRO_OLD NUMBER,
QT_ESTOQUE_ATUAL NUMBER,
QT_ESTOQUE_ATUAL_OLD NUMBER,
SN_BLOQUEIO VARCHAR2( 1 ) ,
SN_BLOQUEIO_OLD VARCHAR2( 1 ) ,
TP_MVTO_ESTOQUE VARCHAR2( 1 ) ,
TP_MVTO_ESTOQUE_OLD VARCHAR2( 1 ) ,
DT_MVTO_ESTOQUE DATE,
DT_MVTO_ESTOQUE_OLD DATE,
HR_MVTO_ESTOQUE DATE,
HR_MVTO_ESTOQUE_OLD DATE,
CD_UNID_INT NUMBER,
CD_UNID_INT_OLD NUMBER,
CD_SETOR NUMBER,
CD_SETOR_OLD NUMBER,
CD_ESTOQUE_DESTINO NUMBER,
CD_ESTOQUE_DESTINO_OLD NUMBER,
SN_CODIGO_DE_BARRAS VARCHAR2( 1 ) ,
SN_CODIGO_DE_BARRAS_OLD VARCHAR2( 1 ) ,
CD_AVISO_CIRURGIA NUMBER,
CD_AVISO_CIRURGIA_OLD NUMBER,
SN_CONSOLIDADA VARCHAR2( 1 ) ,
SN_CONSOLIDADA_OLD VARCHAR2( 1 ) ,
CD_MULTI_EMPRESA NUMBER,
CD_MULTI_EMPRESA_OLD NUMBER,
TP_RETROATIVO VARCHAR2( 1 ) ,
TP_RETROATIVO_OLD VARCHAR2( 1 ) ,
CD_MVTO_FILHA NUMBER,
CD_MVTO_FILHA_OLD NUMBER,
TP_STATUS_CONFIRMACAO VARCHAR2( 1 ) ,
TP_STATUS_CONFIRMACAO_OLD VARCHAR2( 1 ) ,
CD_KIT NUMBER,
CD_KIT_OLD NUMBER,
DSP_CD_BARRAS VARCHAR2( 100 ) ,
DSP_CD_BARRAS_OLD VARCHAR2( 100 ) ,
SN_KIT_ARMAZENADO VARCHAR2( 1 ) ,
SN_KIT_ARMAZENADO_OLD VARCHAR2( 1 ) ,
SN_CONTROLE_VALIDADE VARCHAR2( 1 ) ,
SN_CONTROLE_VALIDADE_OLD VARCHAR2( 1 ) ,
SN_PADRONIZADO VARCHAR2( 1 ) ,
SN_PADRONIZADO_OLD VARCHAR2( 1 ) ,
SN_PSCOTROPICO VARCHAR2( 1 ) ,
SN_PSCOTROPICO_OLD VARCHAR2( 1 ) ,
SN_MESTRE VARCHAR2( 1 ) ,
SN_MESTRE_OLD VARCHAR2( 1 ) ,
SN_MOVIMENTACAO VARCHAR2( 1 ) ,
SN_MOVIMENTACAO_OLD VARCHAR2( 1 ) ,
SN_LOTE VARCHAR2( 1 ) ,
SN_LOTE_OLD VARCHAR2( 1 ) ,
SN_KIT VARCHAR2( 1 ) ,
SN_KIT_OLD VARCHAR2( 1 ) ,
CD_SUB_CLA NUMBER,
CD_SUB_CLA_OLD NUMBER,
CD_CLASSE NUMBER,
CD_CLASSE_OLD NUMBER,
CD_ESPECIE NUMBER,
CD_ESPECIE_OLD NUMBER,
CD_PRODUTO_TEM NUMBER,
CD_PRODUTO_TEM_OLD NUMBER,
DS_PRODUTO VARCHAR2( 60 ) ,
DS_PRODUTO_OLD VARCHAR2( 60 ) ,
CD_PRODUTO_FRACIONAMENTO NUMBER,
CD_PRODUTO_FRACIONAMENTO_OLD NUMBER,
DT_FRACIONAMENTO DATE,
DT_FRACIONAMENTO_OLD DATE,
QT_PRODUTO NUMBER,
QT_PRODUTO_OLD NUMBER,
CD_LOTE_FRACIONADO VARCHAR2( 30 ) ,
CD_LOTE_FRACIONADO_OLD VARCHAR2( 30 ) ,
DT_VALIDADE_FRACIONADO DATE,
DT_VALIDADE_FRACIONADO_OLD DATE,
CD_UNI_PRO_FRACIONADO NUMBER,
CD_UNI_PRO_FRACIONADO_OLD NUMBER,
QT_PROD_FRACIONADO NUMBER,
QT_PROD_FRACIONADO_OLD NUMBER,
QT_DESCARTE_PROD_FRACIONADO NUMBER,
QT_DESCARTE_PROD_FRACIONAD_OLD NUMBER,
CD_MOT_BAI NUMBER,
CD_MOT_BAI_OLD NUMBER,
TP_SOLSAI_PRO VARCHAR2( 1 ) ,
TP_SOLSAI_PRO_OLD VARCHAR2( 1 ) ,
DT_SOLSAI_PRO DATE,
DT_SOLSAI_PRO_OLD DATE,
HR_SOLSAI_PRO DATE,
HR_SOLSAI_PRO_OLD DATE,
CD_PRE_MED NUMBER,
CD_PRE_MED_OLD NUMBER,
CD_ESTOQUE_SOLICITANTE NUMBER,
CD_ESTOQUE_SOLICITANTE_OLD NUMBER,
TP_ORIGEM_SOLICITACAO VARCHAR2( 3 ) ,
TP_ORIGEM_SOLICITACAO_OLD VARCHAR2( 3 ) ,
CD_MOTIVO_CANC NUMBER,
CD_MOTIVO_CANC_OLD NUMBER,
DT_CANCELAMENTO DATE,
DT_CANCELAMENTO_OLD DATE,
CD_EMPRESA_DESTINO NUMBER,
CD_EMPRESA_DESTINO_OLD NUMBER,
CD_UNIDADE VARCHAR2( 6 ) ,
CD_UNIDADE_OLD VARCHAR2( 6 ) ,
DS_UNIDADE VARCHAR2( 30 ) ,
DS_UNIDADE_OLD VARCHAR2( 30 ) ,
VL_FATOR NUMBER,
VL_FATOR_OLD NUMBER,
TP_RELATORIOS VARCHAR2( 1 ) ,
TP_RELATORIOS_OLD VARCHAR2( 1 ) ,
SN_ATIVO VARCHAR2( 1 ) ,
SN_ATIVO_OLD VARCHAR2( 1 )  )
STORAGE (
NEXT       1024 K)
/
ALTER TABLE DBAMV.AUDIT_SUPRIMENTOS ADD CONSTRAINT AUDIT_SUPRIMENTOS_PK PRIMARY KEY (CD_AUDIT_SUPRIMENTOS)
/
GRANT DELETE,INSERT,SELECT,UPDATE ON DBAMV.AUDIT_SUPRIMENTOS TO MV2000
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_1_IX ON DBAMV.AUDIT_SUPRIMENTOS (NM_OBJETO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_2_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_INVENTARIO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_3_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_CONTAGEM) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_4_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_DEVOLUCAO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_5_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ENT_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_6_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_LINHA) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_7_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_PRODUTO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_8_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITDEV_FOR) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_9_IX ON DBAMV.AUDIT_SUPRIMENTOS (NM_USUARIO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_10_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITENT_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_11_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITLOT_ENT) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_12_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_LOTE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_13_IX ON DBAMV.AUDIT_SUPRIMENTOS (DT_VALIDADE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_14_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITMVTO_ESTOQUE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_15_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_MVTO_ESTOQUE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_16_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_FORMULA) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_17_IX ON DBAMV.AUDIT_SUPRIMENTOS (DSP_CODIGO_DE_BARRAS) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_18_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITMVTO_KIT) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_19_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITSOLSAI_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_20_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ITSOLSAI_PRO_ATENDIDO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_21_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_LOT_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_22_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_ESTOQUE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_23_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_PRODUTO_FRACIONAMENTO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_24_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_SOLSAI_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_25_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_UNI_PRO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_26_IX ON DBAMV.AUDIT_SUPRIMENTOS (DS_UNIDADE) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_27_IX ON DBAMV.AUDIT_SUPRIMENTOS (TP_RELATORIOS) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_28_IX ON DBAMV.AUDIT_SUPRIMENTOS (SN_ATIVO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_29_IX ON DBAMV.AUDIT_SUPRIMENTOS (CD_STATUS_PROCESSO) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE SEQUENCE DBAMV.SEQ_AUDIT_SUPRIMENTOS
  MINVALUE 1
  MAXVALUE 9999999999
  INCREMENT BY 1
  NOCYCLE
  NOORDER
  NOCACHE
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS TO DBASGU
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS TO MV2000
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS TO MVINTEGRA
/
CREATE TABLE DBAMV.AUDIT_SUPRIMENTOS_PROCESS (
CD_AUDIT_SUPRIMENTOS_PROCESS NUMBER,
DT_AUDIT_SUPRIMENTOS  DATE,
DS_OPERACAO_REALIZADA CLOB,
CD_CLIENTE NUMBER)
STORAGE (
NEXT       1024 K)
/
ALTER TABLE DBAMV.AUDIT_SUPRIMENTOS_PROCESS ADD CONSTRAINT AUDIT_SUPRIMENTOS_PROCESS_PK PRIMARY KEY (CD_AUDIT_SUPRIMENTOS_PROCESS)
/
GRANT DELETE,INSERT,SELECT,UPDATE ON DBAMV.AUDIT_SUPRIMENTOS_PROCESS TO MV2000
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_PR_1_IX ON DBAMV.AUDIT_SUPRIMENTOS_PROCESS (DT_AUDIT_SUPRIMENTOS) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE INDEX DBAMV.IND_AUDIT_SUPRIMENTOS_PR_2_IX ON DBAMV.AUDIT_SUPRIMENTOS_PROCESS (Trunc(DT_AUDIT_SUPRIMENTOS,'MM')) TABLESPACE MV2000_I COMPUTE STATISTICS
/
CREATE SEQUENCE DBAMV.SEQ_AUDIT_SUPRIMENTOS_PROCESS
  MINVALUE 1
  MAXVALUE 9999999999
  INCREMENT BY 1
  NOCYCLE
  NOORDER
  NOCACHE
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS_PROCESS TO DBASGU
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS_PROCESS TO MV2000
/
GRANT SELECT ON DBAMV.SEQ_AUDIT_SUPRIMENTOS_PROCESS TO MVINTEGRA
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_CONTAGEM
AFTER INSERT OR DELETE OR UPDATE OF DT_APROVACAO,TP_SITUACAO_CONTAGEM,CD_CONTAGEM,CD_ESTOQUE,DT_CONTAGEM,SN_ABERTO,DT_GERACAO,TP_CONTAGEM,HR_CONTAGEM,HR_GERACAO  ON DBAMV.CONTAGEM
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
DT_APROVACAO,
DT_APROVACAO_OLD,
TP_SITUACAO_CONTAGEM,
TP_SITUACAO_CONTAGEM_OLD,
CD_CONTAGEM,
CD_CONTAGEM_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
DT_CONTAGEM,
DT_CONTAGEM_OLD,
SN_ABERTO,
SN_ABERTO_OLD,
DT_GERACAO,
DT_GERACAO_OLD,
TP_CONTAGEM,
TP_CONTAGEM_OLD,
HR_CONTAGEM,
HR_CONTAGEM_OLD,
HR_GERACAO,
HR_GERACAO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'CONTAGEM',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.DT_APROVACAO,
:OLD.DT_APROVACAO,
:NEW.TP_SITUACAO_CONTAGEM,
:OLD.TP_SITUACAO_CONTAGEM,
:NEW.CD_CONTAGEM,
:OLD.CD_CONTAGEM,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.DT_CONTAGEM,
:OLD.DT_CONTAGEM,
:NEW.SN_ABERTO,
:OLD.SN_ABERTO,
:NEW.DT_GERACAO,
:OLD.DT_GERACAO,
:NEW.TP_CONTAGEM,
:OLD.TP_CONTAGEM,
:NEW.HR_CONTAGEM,
:OLD.HR_CONTAGEM,
:NEW.HR_GERACAO,
:OLD.HR_GERACAO,
SYS_CONTEXT('USERENV', 'SID')
);
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_DEV_FOR
AFTER INSERT OR DELETE OR UPDATE OF CD_DEVOLUCAO,CD_ENT_PRO,CD_MOT_DEV,DT_DEVOLUCAO,HR_DEVOLUCAO,DT_EMISSAO,VL_TOTAL,CD_TIP_DOC,CD_CON_PAG  ON DBAMV.DEV_FOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_DEVOLUCAO,
CD_DEVOLUCAO_OLD,
CD_ENT_PRO,
CD_ENT_PRO_OLD,
CD_MOT_DEV,
CD_MOT_DEV_OLD,
DT_DEVOLUCAO,
DT_DEVOLUCAO_OLD,
HR_DEVOLUCAO,
HR_DEVOLUCAO_OLD,
DT_EMISSAO,
DT_EMISSAO_OLD,
VL_TOTAL,
VL_TOTAL_OLD,
CD_TIP_DOC,
CD_TIP_DOC_OLD,
CD_CON_PAG,
CD_CON_PAG_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'DEV_FOR',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_DEVOLUCAO,
:OLD.CD_DEVOLUCAO,
:NEW.CD_ENT_PRO,
:OLD.CD_ENT_PRO,
:NEW.CD_MOT_DEV,
:OLD.CD_MOT_DEV,
:NEW.DT_DEVOLUCAO,
:OLD.DT_DEVOLUCAO,
:NEW.HR_DEVOLUCAO,
:OLD.HR_DEVOLUCAO,
:NEW.DT_EMISSAO,
:OLD.DT_EMISSAO,
:NEW.VL_TOTAL,
:OLD.VL_TOTAL,
:NEW.CD_TIP_DOC,
:OLD.CD_TIP_DOC,
:NEW.CD_CON_PAG,
:OLD.CD_CON_PAG,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ENT_PRO
AFTER INSERT OR DELETE OR UPDATE OF CD_ENT_PRO,CD_ESTOQUE,DT_ENTRADA,NR_DOCUMENTO,TP_FRETE,SN_ATUALIZA_PRECO,CD_FORNECEDOR,DT_EMISSAO,VL_FRETE,VL_TOTAL,CD_ORD_COM,HR_ENTRADA,TP_ENTREGA,VL_DESCONTO,VL_IMPOSTO_ICMS,TP_DOCUMENTO_ENTRADA,NR_SERIE,CD_TIP_DOC,SN_INCLUSAO_NOTA,SN_CONSIGNADO,SN_CONTABILIZA,VL_OUTROS  ON DBAMV.ENT_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_ENT_PRO,
CD_ENT_PRO_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
DT_ENTRADA,
DT_ENTRADA_OLD,
NR_DOCUMENTO,
NR_DOCUMENTO_OLD,
TP_FRETE,
TP_FRETE_OLD,
SN_ATUALIZA_PRECO,
SN_ATUALIZA_PRECO_OLD,
CD_FORNECEDOR,
CD_FORNECEDOR_OLD,
DT_EMISSAO,
DT_EMISSAO_OLD,
VL_FRETE,
VL_FRETE_OLD,
VL_TOTAL,
VL_TOTAL_OLD,
CD_ORD_COM,
CD_ORD_COM_OLD,
HR_ENTRADA,
HR_ENTRADA_OLD,
TP_ENTREGA,
TP_ENTREGA_OLD,
VL_DESCONTO,
VL_DESCONTO_OLD,
VL_IMPOSTO_ICMS,
VL_IMPOSTO_ICMS_OLD,
TP_DOCUMENTO_ENTRADA,
TP_DOCUMENTO_ENTRADA_OLD,
NR_SERIE,
NR_SERIE_OLD,
CD_TIP_DOC,
CD_TIP_DOC_OLD,
SN_INCLUSAO_NOTA,
SN_INCLUSAO_NOTA_OLD,
SN_CONSIGNADO,
SN_CONSIGNADO_OLD,
SN_CONTABILIZA,
SN_CONTABILIZA_OLD,
VL_OUTROS,
VL_OUTROS_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ENT_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_ENT_PRO,
:OLD.CD_ENT_PRO,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.DT_ENTRADA,
:OLD.DT_ENTRADA,
:NEW.NR_DOCUMENTO,
:OLD.NR_DOCUMENTO,
:NEW.TP_FRETE,
:OLD.TP_FRETE,
:NEW.SN_ATUALIZA_PRECO,
:OLD.SN_ATUALIZA_PRECO,
:NEW.CD_FORNECEDOR,
:OLD.CD_FORNECEDOR,
:NEW.DT_EMISSAO,
:OLD.DT_EMISSAO,
:NEW.VL_FRETE,
:OLD.VL_FRETE,
:NEW.VL_TOTAL,
:OLD.VL_TOTAL,
:NEW.CD_ORD_COM,
:OLD.CD_ORD_COM,
:NEW.HR_ENTRADA,
:OLD.HR_ENTRADA,
:NEW.TP_ENTREGA,
:OLD.TP_ENTREGA,
:NEW.VL_DESCONTO,
:OLD.VL_DESCONTO,
:NEW.VL_IMPOSTO_ICMS,
:OLD.VL_IMPOSTO_ICMS,
:NEW.TP_DOCUMENTO_ENTRADA,
:OLD.TP_DOCUMENTO_ENTRADA,
:NEW.NR_SERIE,
:OLD.NR_SERIE,
:NEW.CD_TIP_DOC,
:OLD.CD_TIP_DOC,
:NEW.SN_INCLUSAO_NOTA,
:OLD.SN_INCLUSAO_NOTA,
:NEW.SN_CONSIGNADO,
:OLD.SN_CONSIGNADO,
:NEW.SN_CONTABILIZA,
:OLD.SN_CONTABILIZA,
:NEW.VL_OUTROS,
:OLD.VL_OUTROS,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITCONTAGEM
AFTER INSERT OR DELETE OR UPDATE OF CD_CONTAGEM,VL_CUSTO_MEDIO_HIST,QT_KIT,DSP_COD_BARRAS_LEITURA,DT_GRAVACAO,CD_LINHA,CD_PRODUTO,CD_UNI_PRO,QT_ESTOQUE,DT_VALIDADE,CD_LOTE,VL_CUSTO_MEDIO,DSP_CODIGO_DE_BARRA,QT_ESTOQUE_DOADO  ON DBAMV.ITCONTAGEM
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_CONTAGEM,
CD_CONTAGEM_OLD,
VL_CUSTO_MEDIO_HIST,
VL_CUSTO_MEDIO_HIST_OLD,
QT_KIT,
QT_KIT_OLD,
DSP_COD_BARRAS_LEITURA,
DSP_COD_BARRAS_LEITURA_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
CD_LINHA,
CD_LINHA_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_ESTOQUE,
QT_ESTOQUE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_LOTE,
CD_LOTE_OLD,
VL_CUSTO_MEDIO,
VL_CUSTO_MEDIO_OLD,
DSP_CODIGO_DE_BARRA,
DSP_CODIGO_DE_BARRA_OLD,
QT_ESTOQUE_DOADO,
QT_ESTOQUE_DOADO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITCONTAGEM',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_CONTAGEM,
:OLD.CD_CONTAGEM,
:NEW.VL_CUSTO_MEDIO_HIST,
:OLD.VL_CUSTO_MEDIO_HIST,
:NEW.QT_KIT,
:OLD.QT_KIT,
:NEW.DSP_COD_BARRAS_LEITURA,
:OLD.DSP_COD_BARRAS_LEITURA,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.CD_LINHA,
:OLD.CD_LINHA,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_ESTOQUE,
:OLD.QT_ESTOQUE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.VL_CUSTO_MEDIO,
:OLD.VL_CUSTO_MEDIO,
:NEW.DSP_CODIGO_DE_BARRA,
:OLD.DSP_CODIGO_DE_BARRA,
:NEW.QT_ESTOQUE_DOADO,
:OLD.QT_ESTOQUE_DOADO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITCONTAGEM_DA_ABE
AFTER INSERT OR DELETE OR UPDATE OF CD_CONTAGEM,CD_SEQUENCIAL,CD_PRODUTO  ON DBAMV.ITCONTAGEM_DA_ABERTURA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_CONTAGEM,
CD_CONTAGEM_OLD,
CD_SEQUENCIAL,
CD_SEQUENCIAL_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITCONTAGEM_DA_ABERTURA',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_CONTAGEM,
:OLD.CD_CONTAGEM,
:NEW.CD_SEQUENCIAL,
:OLD.CD_SEQUENCIAL,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITDEV_FOR
AFTER INSERT OR DELETE OR UPDATE OF CD_PRODUTO,CD_ITDEV_FOR,CD_UNI_PRO,QT_DEVOLVIDA,DT_VALIDADE,CD_LOTE,CD_CUSTO_MEDIO,CD_ITENT_PRO,DT_GRAVACAO,SN_ATUALIZA_PRECO_PROD,CD_DEVOLUCAO  ON DBAMV.ITDEV_FOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_ITDEV_FOR,
CD_ITDEV_FOR_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_DEVOLVIDA,
QT_DEVOLVIDA_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_LOTE,
CD_LOTE_OLD,
CD_CUSTO_MEDIO,
CD_CUSTO_MEDIO_OLD,
CD_ITENT_PRO,
CD_ITENT_PRO_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
SN_ATUALIZA_PRECO_PROD,
SN_ATUALIZA_PRECO_PROD_OLD,
CD_DEVOLUCAO,
CD_DEVOLUCAO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITDEV_FOR',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_ITDEV_FOR,
:OLD.CD_ITDEV_FOR,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_DEVOLVIDA,
:OLD.QT_DEVOLVIDA,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.CD_CUSTO_MEDIO,
:OLD.CD_CUSTO_MEDIO,
:NEW.CD_ITENT_PRO,
:OLD.CD_ITENT_PRO,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.SN_ATUALIZA_PRECO_PROD,
:OLD.SN_ATUALIZA_PRECO_PROD,
:NEW.CD_DEVOLUCAO,
:OLD.CD_DEVOLUCAO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITEM_CONTAGEM_USU
AFTER INSERT OR DELETE OR UPDATE OF CD_SERIE,CD_LINHA,NM_USUARIO,CD_PRODUTO,CD_UNI_PRO,QT_ESTOQUE,DT_VALIDADE,CD_LOTE,VL_CUSTO_MEDIO,DS_CODIGO_DE_BARRA,QT_ESTOQUE_DOADO,DT_GRAVACAO,DS_COD_BARRAS_LEITURA,QT_KIT,SN_ATUALIZA_PRECO_PROD,TP_STATUS,CD_LOTE_SERIE,CD_CONTAGEM  ON DBAMV.ITEM_CONTAGEM_USUARIO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_SERIE,
CD_SERIE_OLD,
CD_LINHA,
CD_LINHA_OLD,
NM_USUARIO,
NM_USUARIO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_ESTOQUE,
QT_ESTOQUE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_LOTE,
CD_LOTE_OLD,
VL_CUSTO_MEDIO,
VL_CUSTO_MEDIO_OLD,
DS_CODIGO_DE_BARRA,
DS_CODIGO_DE_BARRA_OLD,
QT_ESTOQUE_DOADO,
QT_ESTOQUE_DOADO_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
DS_COD_BARRAS_LEITURA,
DS_COD_BARRAS_LEITURA_OLD,
QT_KIT,
QT_KIT_OLD,
SN_ATUALIZA_PRECO_PROD,
SN_ATUALIZA_PRECO_PROD_OLD,
TP_STATUS,
TP_STATUS_OLD,
CD_LOTE_SERIE,
CD_LOTE_SERIE_OLD,
CD_CONTAGEM,
CD_CONTAGEM_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITEM_CONTAGEM_USUARIO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_SERIE,
:OLD.CD_SERIE,
:NEW.CD_LINHA,
:OLD.CD_LINHA,
:NEW.NM_USUARIO,
:OLD.NM_USUARIO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_ESTOQUE,
:OLD.QT_ESTOQUE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.VL_CUSTO_MEDIO,
:OLD.VL_CUSTO_MEDIO,
:NEW.DS_CODIGO_DE_BARRA,
:OLD.DS_CODIGO_DE_BARRA,
:NEW.QT_ESTOQUE_DOADO,
:OLD.QT_ESTOQUE_DOADO,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.DS_COD_BARRAS_LEITURA,
:OLD.DS_COD_BARRAS_LEITURA,
:NEW.QT_KIT,
:OLD.QT_KIT,
:NEW.SN_ATUALIZA_PRECO_PROD,
:OLD.SN_ATUALIZA_PRECO_PROD,
:NEW.TP_STATUS,
:OLD.TP_STATUS,
:NEW.CD_LOTE_SERIE,
:OLD.CD_LOTE_SERIE,
:NEW.CD_CONTAGEM,
:OLD.CD_CONTAGEM,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITENT_PRO
AFTER INSERT OR DELETE OR UPDATE OF QT_ATENDIDA,VL_TOTAL_CUSTO_REAL,QT_TOMBADO,DSP_CODIGO_DE_BARRAS,DT_GRAVACAO,SN_PENDENCIA,CD_ATENDIMENTO,SN_ATUALIZA_PRECO_PROD,CD_ITENT_PRO,CD_ENT_PRO,CD_PRODUTO,CD_UNI_PRO,QT_ENTRADA,QT_DEVOLVIDA,VL_CUSTO_REAL,VL_TOTAL,CD_CUSTO_MEDIO,CD_CUSTO_MEDIO_MESTRE,VL_UNITARIO,VL_DESCONTO,VL_IMPOSTO  ON DBAMV.ITENT_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
QT_ATENDIDA,
QT_ATENDIDA_OLD,
VL_TOTAL_CUSTO_REAL,
VL_TOTAL_CUSTO_REAL_OLD,
QT_TOMBADO,
QT_TOMBADO_OLD,
DSP_CODIGO_DE_BARRAS,
DSP_CODIGO_DE_BARRAS_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
SN_PENDENCIA,
SN_PENDENCIA_OLD,
CD_ATENDIMENTO,
CD_ATENDIMENTO_OLD,
SN_ATUALIZA_PRECO_PROD,
SN_ATUALIZA_PRECO_PROD_OLD,
CD_ITENT_PRO,
CD_ITENT_PRO_OLD,
CD_ENT_PRO,
CD_ENT_PRO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_ENTRADA,
QT_ENTRADA_OLD,
QT_DEVOLVIDA,
QT_DEVOLVIDA_OLD,
VL_CUSTO_REAL,
VL_CUSTO_REAL_OLD,
VL_TOTAL,
VL_TOTAL_OLD,
CD_CUSTO_MEDIO,
CD_CUSTO_MEDIO_OLD,
CD_CUSTO_MEDIO_MESTRE,
CD_CUSTO_MEDIO_MESTRE_OLD,
VL_UNITARIO,
VL_UNITARIO_OLD,
VL_DESCONTO,
VL_DESCONTO_OLD,
VL_IMPOSTO,
VL_IMPOSTO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITENT_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.QT_ATENDIDA,
:OLD.QT_ATENDIDA,
:NEW.VL_TOTAL_CUSTO_REAL,
:OLD.VL_TOTAL_CUSTO_REAL,
:NEW.QT_TOMBADO,
:OLD.QT_TOMBADO,
:NEW.DSP_CODIGO_DE_BARRAS,
:OLD.DSP_CODIGO_DE_BARRAS,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.SN_PENDENCIA,
:OLD.SN_PENDENCIA,
:NEW.CD_ATENDIMENTO,
:OLD.CD_ATENDIMENTO,
:NEW.SN_ATUALIZA_PRECO_PROD,
:OLD.SN_ATUALIZA_PRECO_PROD,
:NEW.CD_ITENT_PRO,
:OLD.CD_ITENT_PRO,
:NEW.CD_ENT_PRO,
:OLD.CD_ENT_PRO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_ENTRADA,
:OLD.QT_ENTRADA,
:NEW.QT_DEVOLVIDA,
:OLD.QT_DEVOLVIDA,
:NEW.VL_CUSTO_REAL,
:OLD.VL_CUSTO_REAL,
:NEW.VL_TOTAL,
:OLD.VL_TOTAL,
:NEW.CD_CUSTO_MEDIO,
:OLD.CD_CUSTO_MEDIO,
:NEW.CD_CUSTO_MEDIO_MESTRE,
:OLD.CD_CUSTO_MEDIO_MESTRE,
:NEW.VL_UNITARIO,
:OLD.VL_UNITARIO,
:NEW.VL_DESCONTO,
:OLD.VL_DESCONTO,
:NEW.VL_IMPOSTO,
:OLD.VL_IMPOSTO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITLOT_ENT
AFTER INSERT OR DELETE OR UPDATE OF CD_ITLOT_ENT,CD_SERIE,CD_LOTE,DT_VALIDADE,QT_ENT_PRO,QT_DEVOLVIDO,DS_MARCA,CD_UNI_PRO,DT_GRAVACAO,DT_VALIDADE_REG,CD_LOTE_SERIE,CD_ITENT_PRO  ON DBAMV.ITLOT_ENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_ITLOT_ENT,
CD_ITLOT_ENT_OLD,
CD_SERIE,
CD_SERIE_OLD,
CD_LOTE,
CD_LOTE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
QT_ENT_PRO,
QT_ENT_PRO_OLD,
QT_DEVOLVIDO,
QT_DEVOLVIDO_OLD,
DS_MARCA,
DS_MARCA_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
DT_VALIDADE_REG,
DT_VALIDADE_REG_OLD,
CD_LOTE_SERIE,
CD_LOTE_SERIE_OLD,
CD_ITENT_PRO,
CD_ITENT_PRO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITLOT_ENT',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_ITLOT_ENT,
:OLD.CD_ITLOT_ENT,
:NEW.CD_SERIE,
:OLD.CD_SERIE,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.QT_ENT_PRO,
:OLD.QT_ENT_PRO,
:NEW.QT_DEVOLVIDO,
:OLD.QT_DEVOLVIDO,
:NEW.DS_MARCA,
:OLD.DS_MARCA,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.DT_VALIDADE_REG,
:OLD.DT_VALIDADE_REG,
:NEW.CD_LOTE_SERIE,
:OLD.CD_LOTE_SERIE,
:NEW.CD_ITENT_PRO,
:OLD.CD_ITENT_PRO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITMVTO_ENT
AFTER INSERT OR DELETE OR UPDATE OF CD_ITENT_PRO,DT_FECHAMENTO_EMPRESTIMO,TP_EMPRESTIMO,CD_ITMVTO_ESTOQUE  ON DBAMV.ITMVTO_ENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_ITENT_PRO,
CD_ITENT_PRO_OLD,
DT_FECHAMENTO_EMPRESTIMO,
DT_FECHAMENTO_EMPRESTIMO_OLD,
TP_EMPRESTIMO,
TP_EMPRESTIMO_OLD,
CD_ITMVTO_ESTOQUE,
CD_ITMVTO_ESTOQUE_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITMVTO_ENT',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_ITENT_PRO,
:OLD.CD_ITENT_PRO,
:NEW.DT_FECHAMENTO_EMPRESTIMO,
:OLD.DT_FECHAMENTO_EMPRESTIMO,
:NEW.TP_EMPRESTIMO,
:OLD.TP_EMPRESTIMO,
:NEW.CD_ITMVTO_ESTOQUE,
:OLD.CD_ITMVTO_ESTOQUE,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITMVTO_ESTOQUE
AFTER INSERT OR DELETE OR UPDATE OF DH_MVTO_ESTOQUE,CD_ITSOLSAI_PRO,CD_ITENT_PRO,CD_FORNECEDOR,CD_PRODUTO_KIT,TP_ESTOQUE,CD_FORMULA_KIT,QT_KIT,TP_ORCAMENTO,VL_UNITARIO,DT_GRAVACAO,SN_PENDENCIA,QT_RECEBIDO,CD_MVTO_ESTOQUE,CD_ITMVTO_ESTOQUE,DSP_CODIGO_DE_BARRAS,CD_PRODUTO,CD_UNI_PRO,QT_MOVIMENTACAO,CD_LOTE,DT_VALIDADE  ON DBAMV.ITMVTO_ESTOQUE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
DH_MVTO_ESTOQUE,
DH_MVTO_ESTOQUE_OLD,
CD_ITSOLSAI_PRO,
CD_ITSOLSAI_PRO_OLD,
CD_ITENT_PRO,
CD_ITENT_PRO_OLD,
CD_FORNECEDOR,
CD_FORNECEDOR_OLD,
CD_PRODUTO_KIT,
CD_PRODUTO_KIT_OLD,
TP_ESTOQUE,
TP_ESTOQUE_OLD,
CD_FORMULA_KIT,
CD_FORMULA_KIT_OLD,
QT_KIT,
QT_KIT_OLD,
TP_ORCAMENTO,
TP_ORCAMENTO_OLD,
VL_UNITARIO,
VL_UNITARIO_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
SN_PENDENCIA,
SN_PENDENCIA_OLD,
QT_RECEBIDO,
QT_RECEBIDO_OLD,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
CD_ITMVTO_ESTOQUE,
CD_ITMVTO_ESTOQUE_OLD,
DSP_CODIGO_DE_BARRAS,
DSP_CODIGO_DE_BARRAS_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_MOVIMENTACAO,
QT_MOVIMENTACAO_OLD,
CD_LOTE,
CD_LOTE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITMVTO_ESTOQUE',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.DH_MVTO_ESTOQUE,
:OLD.DH_MVTO_ESTOQUE,
:NEW.CD_ITSOLSAI_PRO,
:OLD.CD_ITSOLSAI_PRO,
:NEW.CD_ITENT_PRO,
:OLD.CD_ITENT_PRO,
:NEW.CD_FORNECEDOR,
:OLD.CD_FORNECEDOR,
:NEW.CD_PRODUTO_KIT,
:OLD.CD_PRODUTO_KIT,
:NEW.TP_ESTOQUE,
:OLD.TP_ESTOQUE,
:NEW.CD_FORMULA_KIT,
:OLD.CD_FORMULA_KIT,
:NEW.QT_KIT,
:OLD.QT_KIT,
:NEW.TP_ORCAMENTO,
:OLD.TP_ORCAMENTO,
:NEW.VL_UNITARIO,
:OLD.VL_UNITARIO,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.SN_PENDENCIA,
:OLD.SN_PENDENCIA,
:NEW.QT_RECEBIDO,
:OLD.QT_RECEBIDO,
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
:NEW.CD_ITMVTO_ESTOQUE,
:OLD.CD_ITMVTO_ESTOQUE,
:NEW.DSP_CODIGO_DE_BARRAS,
:OLD.DSP_CODIGO_DE_BARRAS,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_MOVIMENTACAO,
:OLD.QT_MOVIMENTACAO,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITMVTO_ESTOQUE_CU
AFTER INSERT OR DELETE OR UPDATE OF CD_PRODUTO,CD_MVTO_ESTOQUE,CD_ITMVTO_ESTOQUE,CD_ESTOQUE,DH_MVTO_ESTOQUE,QT_MOVIMENTO  ON DBAMV.ITMVTO_ESTOQUE_CUSTO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
CD_ITMVTO_ESTOQUE,
CD_ITMVTO_ESTOQUE_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
DH_MVTO_ESTOQUE,
DH_MVTO_ESTOQUE_OLD,
QT_MOVIMENTO,
QT_MOVIMENTO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITMVTO_ESTOQUE_CUSTO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
:NEW.CD_ITMVTO_ESTOQUE,
:OLD.CD_ITMVTO_ESTOQUE,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.DH_MVTO_ESTOQUE,
:OLD.DH_MVTO_ESTOQUE,
:NEW.QT_MOVIMENTO,
:OLD.QT_MOVIMENTO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITMVTO_KIT_PRODUZ
AFTER INSERT OR DELETE OR UPDATE OF CD_LOTE,DT_VALIDADE,DH_MVTO_ESTOQUE,TP_ESTOQUE,DT_GRAVACAO,TP_PRODUTO,QT_MOVIMENTACAO,CD_UNI_PRO,CD_PRODUTO,DSP_CODIGO_DE_BARRAS,CD_ITMVTO_ESTOQUE,CD_MVTO_ESTOQUE  ON DBAMV.ITMVTO_KIT_PRODUZIDO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_LOTE,
CD_LOTE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
DH_MVTO_ESTOQUE,
DH_MVTO_ESTOQUE_OLD,
TP_ESTOQUE,
TP_ESTOQUE_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
TP_PRODUTO,
TP_PRODUTO_OLD,
QT_MOVIMENTACAO,
QT_MOVIMENTACAO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
DSP_CODIGO_DE_BARRAS,
DSP_CODIGO_DE_BARRAS_OLD,
CD_ITMVTO_ESTOQUE,
CD_ITMVTO_ESTOQUE_OLD,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITMVTO_KIT_PRODUZIDO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.DH_MVTO_ESTOQUE,
:OLD.DH_MVTO_ESTOQUE,
:NEW.TP_ESTOQUE,
:OLD.TP_ESTOQUE,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.TP_PRODUTO,
:OLD.TP_PRODUTO,
:NEW.QT_MOVIMENTACAO,
:OLD.QT_MOVIMENTACAO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.DSP_CODIGO_DE_BARRAS,
:OLD.DSP_CODIGO_DE_BARRAS,
:NEW.CD_ITMVTO_ESTOQUE,
:OLD.CD_ITMVTO_ESTOQUE,
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITMVTO_KITS
AFTER INSERT OR DELETE OR UPDATE OF CD_MVTO_ESTOQUE,QT_KIT,CD_FORMULA,QT_ITENS_ITMVTO_ESTOQUE,DSP_CODIGO_DE_BARRAS,CD_ITMVTO_KIT  ON DBAMV.ITMVTO_KITS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
QT_KIT,
QT_KIT_OLD,
CD_FORMULA,
CD_FORMULA_OLD,
QT_ITENS_ITMVTO_ESTOQUE,
QT_ITENS_ITMVTO_ESTOQUE_OLD,
DSP_CODIGO_DE_BARRAS,
DSP_CODIGO_DE_BARRAS_OLD,
CD_ITMVTO_KIT,
CD_ITMVTO_KIT_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITMVTO_KITS',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
:NEW.QT_KIT,
:OLD.QT_KIT,
:NEW.CD_FORMULA,
:OLD.CD_FORMULA,
:NEW.QT_ITENS_ITMVTO_ESTOQUE,
:OLD.QT_ITENS_ITMVTO_ESTOQUE,
:NEW.DSP_CODIGO_DE_BARRAS,
:OLD.DSP_CODIGO_DE_BARRAS,
:NEW.CD_ITMVTO_KIT,
:OLD.CD_ITMVTO_KIT,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITSOLSAI_PRO
AFTER INSERT OR DELETE OR UPDATE OF QT_ATENDIDA,SN_CONF_DETERM_USU,DT_GRAVACAO,DSP_CODIGO_DE_BARRAS,CD_FORMULA_KIT,CD_ITSOLSAI_PRO,CD_SOLSAI_PRO,CD_PRODUTO,CD_UNI_PRO,QT_SOLICITADO,SN_ATENDIDO,CD_LOTE,DT_VALIDADE,CD_PRODUTO_KIT  ON DBAMV.ITSOLSAI_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
QT_ATENDIDA,
QT_ATENDIDA_OLD,
SN_CONF_DETERM_USU,
SN_CONF_DETERM_USU_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
DSP_CODIGO_DE_BARRAS,
DSP_CODIGO_DE_BARRAS_OLD,
CD_FORMULA_KIT,
CD_FORMULA_KIT_OLD,
CD_ITSOLSAI_PRO,
CD_ITSOLSAI_PRO_OLD,
CD_SOLSAI_PRO,
CD_SOLSAI_PRO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
QT_SOLICITADO,
QT_SOLICITADO_OLD,
SN_ATENDIDO,
SN_ATENDIDO_OLD,
CD_LOTE,
CD_LOTE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_PRODUTO_KIT,
CD_PRODUTO_KIT_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITSOLSAI_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.QT_ATENDIDA,
:OLD.QT_ATENDIDA,
:NEW.SN_CONF_DETERM_USU,
:OLD.SN_CONF_DETERM_USU,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.DSP_CODIGO_DE_BARRAS,
:OLD.DSP_CODIGO_DE_BARRAS,
:NEW.CD_FORMULA_KIT,
:OLD.CD_FORMULA_KIT,
:NEW.CD_ITSOLSAI_PRO,
:OLD.CD_ITSOLSAI_PRO,
:NEW.CD_SOLSAI_PRO,
:OLD.CD_SOLSAI_PRO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.QT_SOLICITADO,
:OLD.QT_SOLICITADO,
:NEW.SN_ATENDIDO,
:OLD.SN_ATENDIDO,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.CD_PRODUTO_KIT,
:OLD.CD_PRODUTO_KIT,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_ITSOLSAI_PRO_ATEN
AFTER INSERT OR DELETE OR UPDATE OF CD_ITMVTO_ESTOQUE,QTD_ATENDIDA,CD_UNI_PRO,CD_PRODUTO_ATENDIDO,CD_ITSOLSAI_PRO,CD_ITSOLSAI_PRO_ATENDIDO  ON DBAMV.ITSOLSAI_PRO_ATENDIDO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_ITMVTO_ESTOQUE,
CD_ITMVTO_ESTOQUE_OLD,
QTD_ATENDIDA,
QTD_ATENDIDA_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
CD_PRODUTO_ATENDIDO,
CD_PRODUTO_ATENDIDO_OLD,
CD_ITSOLSAI_PRO,
CD_ITSOLSAI_PRO_OLD,
CD_ITSOLSAI_PRO_ATENDIDO,
CD_ITSOLSAI_PRO_ATENDIDO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'ITSOLSAI_PRO_ATENDIDO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_ITMVTO_ESTOQUE,
:OLD.CD_ITMVTO_ESTOQUE,
:NEW.QTD_ATENDIDA,
:OLD.QTD_ATENDIDA,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.CD_PRODUTO_ATENDIDO,
:OLD.CD_PRODUTO_ATENDIDO,
:NEW.CD_ITSOLSAI_PRO,
:OLD.CD_ITSOLSAI_PRO,
:NEW.CD_ITSOLSAI_PRO_ATENDIDO,
:OLD.CD_ITSOLSAI_PRO_ATENDIDO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_LOT_PRO
AFTER INSERT OR DELETE OR UPDATE OF DS_MOTIVO_BLOQUEIO,CD_LOT_PRO,CD_ESTOQUE,CD_PRODUTO,DT_VALIDADE,QT_ESTOQUE_ATUAL,CD_LOTE,SN_BLOQUEIO,QT_ESTOQUE_DOADO,DS_MARCA,QT_KIT  ON DBAMV.LOT_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
DS_MOTIVO_BLOQUEIO,
DS_MOTIVO_BLOQUEIO_OLD,
CD_LOT_PRO,
CD_LOT_PRO_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
QT_ESTOQUE_ATUAL,
QT_ESTOQUE_ATUAL_OLD,
CD_LOTE,
CD_LOTE_OLD,
SN_BLOQUEIO,
SN_BLOQUEIO_OLD,
QT_ESTOQUE_DOADO,
QT_ESTOQUE_DOADO_OLD,
DS_MARCA,
DS_MARCA_OLD,
QT_KIT,
QT_KIT_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'LOT_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.DS_MOTIVO_BLOQUEIO,
:OLD.DS_MOTIVO_BLOQUEIO,
:NEW.CD_LOT_PRO,
:OLD.CD_LOT_PRO,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.QT_ESTOQUE_ATUAL,
:OLD.QT_ESTOQUE_ATUAL,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.SN_BLOQUEIO,
:OLD.SN_BLOQUEIO,
:NEW.QT_ESTOQUE_DOADO,
:OLD.QT_ESTOQUE_DOADO,
:NEW.DS_MARCA,
:OLD.DS_MARCA,
:NEW.QT_KIT,
:OLD.QT_KIT,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_MVTO_ESTOQUE
AFTER INSERT OR DELETE OR UPDATE OF CD_MVTO_ESTOQUE,TP_MVTO_ESTOQUE,CD_ESTOQUE,DT_MVTO_ESTOQUE,HR_MVTO_ESTOQUE,CD_ATENDIMENTO,CD_UNID_INT,CD_SETOR,CD_ESTOQUE_DESTINO,CD_MOT_DEV,SN_CODIGO_DE_BARRAS,CD_SOLSAI_PRO,CD_AVISO_CIRURGIA,CD_ENT_PRO,CD_USUARIO,SN_CONSOLIDADA,CD_TIP_DOC,CD_MULTI_EMPRESA,TP_RETROATIVO,CD_MVTO_FILHA,TP_STATUS_CONFIRMACAO  ON DBAMV.MVTO_ESTOQUE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
TP_MVTO_ESTOQUE,
TP_MVTO_ESTOQUE_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
DT_MVTO_ESTOQUE,
DT_MVTO_ESTOQUE_OLD,
HR_MVTO_ESTOQUE,
HR_MVTO_ESTOQUE_OLD,
CD_ATENDIMENTO,
CD_ATENDIMENTO_OLD,
CD_UNID_INT,
CD_UNID_INT_OLD,
CD_SETOR,
CD_SETOR_OLD,
CD_ESTOQUE_DESTINO,
CD_ESTOQUE_DESTINO_OLD,
CD_MOT_DEV,
CD_MOT_DEV_OLD,
SN_CODIGO_DE_BARRAS,
SN_CODIGO_DE_BARRAS_OLD,
CD_SOLSAI_PRO,
CD_SOLSAI_PRO_OLD,
CD_AVISO_CIRURGIA,
CD_AVISO_CIRURGIA_OLD,
CD_ENT_PRO,
CD_ENT_PRO_OLD,
CD_USUARIO,
CD_USUARIO_OLD,
SN_CONSOLIDADA,
SN_CONSOLIDADA_OLD,
CD_TIP_DOC,
CD_TIP_DOC_OLD,
CD_MULTI_EMPRESA,
CD_MULTI_EMPRESA_OLD,
TP_RETROATIVO,
TP_RETROATIVO_OLD,
CD_MVTO_FILHA,
CD_MVTO_FILHA_OLD,
TP_STATUS_CONFIRMACAO,
TP_STATUS_CONFIRMACAO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'MVTO_ESTOQUE',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
:NEW.TP_MVTO_ESTOQUE,
:OLD.TP_MVTO_ESTOQUE,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.DT_MVTO_ESTOQUE,
:OLD.DT_MVTO_ESTOQUE,
:NEW.HR_MVTO_ESTOQUE,
:OLD.HR_MVTO_ESTOQUE,
:NEW.CD_ATENDIMENTO,
:OLD.CD_ATENDIMENTO,
:NEW.CD_UNID_INT,
:OLD.CD_UNID_INT,
:NEW.CD_SETOR,
:OLD.CD_SETOR,
:NEW.CD_ESTOQUE_DESTINO,
:OLD.CD_ESTOQUE_DESTINO,
:NEW.CD_MOT_DEV,
:OLD.CD_MOT_DEV,
:NEW.SN_CODIGO_DE_BARRAS,
:OLD.SN_CODIGO_DE_BARRAS,
:NEW.CD_SOLSAI_PRO,
:OLD.CD_SOLSAI_PRO,
:NEW.CD_AVISO_CIRURGIA,
:OLD.CD_AVISO_CIRURGIA,
:NEW.CD_ENT_PRO,
:OLD.CD_ENT_PRO,
:NEW.CD_USUARIO,
:OLD.CD_USUARIO,
:NEW.SN_CONSOLIDADA,
:OLD.SN_CONSOLIDADA,
:NEW.CD_TIP_DOC,
:OLD.CD_TIP_DOC,
:NEW.CD_MULTI_EMPRESA,
:OLD.CD_MULTI_EMPRESA,
:NEW.TP_RETROATIVO,
:OLD.TP_RETROATIVO,
:NEW.CD_MVTO_FILHA,
:OLD.CD_MVTO_FILHA,
:NEW.TP_STATUS_CONFIRMACAO,
:OLD.TP_STATUS_CONFIRMACAO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_MVTO_KIT_PRODUZID
AFTER INSERT OR DELETE OR UPDATE OF CD_MVTO_ESTOQUE,CD_FORMULA,CD_ESTOQUE,DT_MVTO_ESTOQUE,HR_MVTO_ESTOQUE,DT_VALIDADE,CD_ESTOQUE_DESTINO,SN_CODIGO_DE_BARRAS,CD_USUARIO,DT_GRAVACAO,CD_KIT,DSP_CD_BARRAS,SN_KIT_ARMAZENADO,TP_MVTO_ESTOQUE  ON DBAMV.MVTO_KIT_PRODUZIDO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
CD_FORMULA,
CD_FORMULA_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
DT_MVTO_ESTOQUE,
DT_MVTO_ESTOQUE_OLD,
HR_MVTO_ESTOQUE,
HR_MVTO_ESTOQUE_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
CD_ESTOQUE_DESTINO,
CD_ESTOQUE_DESTINO_OLD,
SN_CODIGO_DE_BARRAS,
SN_CODIGO_DE_BARRAS_OLD,
CD_USUARIO,
CD_USUARIO_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
CD_KIT,
CD_KIT_OLD,
DSP_CD_BARRAS,
DSP_CD_BARRAS_OLD,
SN_KIT_ARMAZENADO,
SN_KIT_ARMAZENADO_OLD,
TP_MVTO_ESTOQUE,
TP_MVTO_ESTOQUE_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'MVTO_KIT_PRODUZIDO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
:NEW.CD_FORMULA,
:OLD.CD_FORMULA,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.DT_MVTO_ESTOQUE,
:OLD.DT_MVTO_ESTOQUE,
:NEW.HR_MVTO_ESTOQUE,
:OLD.HR_MVTO_ESTOQUE,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.CD_ESTOQUE_DESTINO,
:OLD.CD_ESTOQUE_DESTINO,
:NEW.SN_CODIGO_DE_BARRAS,
:OLD.SN_CODIGO_DE_BARRAS,
:NEW.CD_USUARIO,
:OLD.CD_USUARIO,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.CD_KIT,
:OLD.CD_KIT,
:NEW.DSP_CD_BARRAS,
:OLD.DSP_CD_BARRAS,
:NEW.SN_KIT_ARMAZENADO,
:OLD.SN_KIT_ARMAZENADO,
:NEW.TP_MVTO_ESTOQUE,
:OLD.TP_MVTO_ESTOQUE,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_PRODUTO
AFTER INSERT OR DELETE OR UPDATE OF SN_CONTROLE_VALIDADE,SN_PADRONIZADO,SN_PSCOTROPICO,SN_MESTRE,SN_MOVIMENTACAO,SN_LOTE,SN_KIT,SN_CONSIGNADO,CD_PRODUTO,CD_SUB_CLA,CD_CLASSE,CD_ESPECIE,CD_PRODUTO_TEM,DS_PRODUTO  ON DBAMV.PRODUTO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
SN_CONTROLE_VALIDADE,
SN_CONTROLE_VALIDADE_OLD,
SN_PADRONIZADO,
SN_PADRONIZADO_OLD,
SN_PSCOTROPICO,
SN_PSCOTROPICO_OLD,
SN_MESTRE,
SN_MESTRE_OLD,
SN_MOVIMENTACAO,
SN_MOVIMENTACAO_OLD,
SN_LOTE,
SN_LOTE_OLD,
SN_KIT,
SN_KIT_OLD,
SN_CONSIGNADO,
SN_CONSIGNADO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_SUB_CLA,
CD_SUB_CLA_OLD,
CD_CLASSE,
CD_CLASSE_OLD,
CD_ESPECIE,
CD_ESPECIE_OLD,
CD_PRODUTO_TEM,
CD_PRODUTO_TEM_OLD,
DS_PRODUTO,
DS_PRODUTO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'PRODUTO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.SN_CONTROLE_VALIDADE,
:OLD.SN_CONTROLE_VALIDADE,
:NEW.SN_PADRONIZADO,
:OLD.SN_PADRONIZADO,
:NEW.SN_PSCOTROPICO,
:OLD.SN_PSCOTROPICO,
:NEW.SN_MESTRE,
:OLD.SN_MESTRE,
:NEW.SN_MOVIMENTACAO,
:OLD.SN_MOVIMENTACAO,
:NEW.SN_LOTE,
:OLD.SN_LOTE,
:NEW.SN_KIT,
:OLD.SN_KIT,
:NEW.SN_CONSIGNADO,
:OLD.SN_CONSIGNADO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_SUB_CLA,
:OLD.CD_SUB_CLA,
:NEW.CD_CLASSE,
:OLD.CD_CLASSE,
:NEW.CD_ESPECIE,
:OLD.CD_ESPECIE,
:NEW.CD_PRODUTO_TEM,
:OLD.CD_PRODUTO_TEM,
:NEW.DS_PRODUTO,
:OLD.DS_PRODUTO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_PRODUTO_FRACIONAM
AFTER INSERT OR DELETE OR UPDATE OF CD_PRODUTO_FRACIONAMENTO,CD_PRODUTO,CD_ESTOQUE,CD_LOTE,DT_FRACIONAMENTO,DT_VALIDADE,QT_PRODUTO,CD_UNI_PRO,CD_LOTE_FRACIONADO,DT_VALIDADE_FRACIONADO,CD_UNI_PRO_FRACIONADO,QT_PROD_FRACIONADO,QT_DESCARTE_PROD_FRACIONADO,CD_MOT_BAI,TP_SITUACAO,CD_MVTO_ESTOQUE  ON DBAMV.PRODUTO_FRACIONAMENTO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_PRODUTO_FRACIONAMENTO,
CD_PRODUTO_FRACIONAMENTO_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
CD_LOTE,
CD_LOTE_OLD,
DT_FRACIONAMENTO,
DT_FRACIONAMENTO_OLD,
DT_VALIDADE,
DT_VALIDADE_OLD,
QT_PRODUTO,
QT_PRODUTO_OLD,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
CD_LOTE_FRACIONADO,
CD_LOTE_FRACIONADO_OLD,
DT_VALIDADE_FRACIONADO,
DT_VALIDADE_FRACIONADO_OLD,
CD_UNI_PRO_FRACIONADO,
CD_UNI_PRO_FRACIONADO_OLD,
QT_PROD_FRACIONADO,
QT_PROD_FRACIONADO_OLD,
QT_DESCARTE_PROD_FRACIONADO,
QT_DESCARTE_PROD_FRACIONAD_OLD,
CD_MOT_BAI,
CD_MOT_BAI_OLD,
TP_SITUACAO,
TP_SITUACAO_OLD,
CD_MVTO_ESTOQUE,
CD_MVTO_ESTOQUE_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'PRODUTO_FRACIONAMENTO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_PRODUTO_FRACIONAMENTO,
:OLD.CD_PRODUTO_FRACIONAMENTO,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.CD_LOTE,
:OLD.CD_LOTE,
:NEW.DT_FRACIONAMENTO,
:OLD.DT_FRACIONAMENTO,
:NEW.DT_VALIDADE,
:OLD.DT_VALIDADE,
:NEW.QT_PRODUTO,
:OLD.QT_PRODUTO,
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.CD_LOTE_FRACIONADO,
:OLD.CD_LOTE_FRACIONADO,
:NEW.DT_VALIDADE_FRACIONADO,
:OLD.DT_VALIDADE_FRACIONADO,
:NEW.CD_UNI_PRO_FRACIONADO,
:OLD.CD_UNI_PRO_FRACIONADO,
:NEW.QT_PROD_FRACIONADO,
:OLD.QT_PROD_FRACIONADO,
:NEW.QT_DESCARTE_PROD_FRACIONADO,
:OLD.QT_DESCARTE_PROD_FRACIONADO,
:NEW.CD_MOT_BAI,
:OLD.CD_MOT_BAI,
:NEW.TP_SITUACAO,
:OLD.TP_SITUACAO,
:NEW.CD_MVTO_ESTOQUE,
:OLD.CD_MVTO_ESTOQUE,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_SOLSAI_PRO
AFTER INSERT OR DELETE OR UPDATE OF TP_SOLSAI_PRO,CD_SETOR,CD_ESTOQUE,TP_SITUACAO,CD_ATENDIMENTO,DT_SOLSAI_PRO,CD_UNID_INT,HR_SOLSAI_PRO,CD_PRE_MED,CD_ESTOQUE_SOLICITANTE,CD_AVISO_CIRURGIA,DT_GRAVACAO,TP_ORIGEM_SOLICITACAO,CD_ENT_PRO,CD_MOTIVO_CANC,DT_CANCELAMENTO,CD_EMPRESA_DESTINO,CD_SOLSAI_PRO  ON DBAMV.SOLSAI_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
TP_SOLSAI_PRO,
TP_SOLSAI_PRO_OLD,
CD_SETOR,
CD_SETOR_OLD,
CD_ESTOQUE,
CD_ESTOQUE_OLD,
TP_SITUACAO,
TP_SITUACAO_OLD,
CD_ATENDIMENTO,
CD_ATENDIMENTO_OLD,
DT_SOLSAI_PRO,
DT_SOLSAI_PRO_OLD,
CD_UNID_INT,
CD_UNID_INT_OLD,
HR_SOLSAI_PRO,
HR_SOLSAI_PRO_OLD,
CD_PRE_MED,
CD_PRE_MED_OLD,
CD_ESTOQUE_SOLICITANTE,
CD_ESTOQUE_SOLICITANTE_OLD,
CD_AVISO_CIRURGIA,
CD_AVISO_CIRURGIA_OLD,
DT_GRAVACAO,
DT_GRAVACAO_OLD,
TP_ORIGEM_SOLICITACAO,
TP_ORIGEM_SOLICITACAO_OLD,
CD_ENT_PRO,
CD_ENT_PRO_OLD,
CD_MOTIVO_CANC,
CD_MOTIVO_CANC_OLD,
DT_CANCELAMENTO,
DT_CANCELAMENTO_OLD,
CD_EMPRESA_DESTINO,
CD_EMPRESA_DESTINO_OLD,
CD_SOLSAI_PRO,
CD_SOLSAI_PRO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'SOLSAI_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.TP_SOLSAI_PRO,
:OLD.TP_SOLSAI_PRO,
:NEW.CD_SETOR,
:OLD.CD_SETOR,
:NEW.CD_ESTOQUE,
:OLD.CD_ESTOQUE,
:NEW.TP_SITUACAO,
:OLD.TP_SITUACAO,
:NEW.CD_ATENDIMENTO,
:OLD.CD_ATENDIMENTO,
:NEW.DT_SOLSAI_PRO,
:OLD.DT_SOLSAI_PRO,
:NEW.CD_UNID_INT,
:OLD.CD_UNID_INT,
:NEW.HR_SOLSAI_PRO,
:OLD.HR_SOLSAI_PRO,
:NEW.CD_PRE_MED,
:OLD.CD_PRE_MED,
:NEW.CD_ESTOQUE_SOLICITANTE,
:OLD.CD_ESTOQUE_SOLICITANTE,
:NEW.CD_AVISO_CIRURGIA,
:OLD.CD_AVISO_CIRURGIA,
:NEW.DT_GRAVACAO,
:OLD.DT_GRAVACAO,
:NEW.TP_ORIGEM_SOLICITACAO,
:OLD.TP_ORIGEM_SOLICITACAO,
:NEW.CD_ENT_PRO,
:OLD.CD_ENT_PRO,
:NEW.CD_MOTIVO_CANC,
:OLD.CD_MOTIVO_CANC,
:NEW.DT_CANCELAMENTO,
:OLD.DT_CANCELAMENTO,
:NEW.CD_EMPRESA_DESTINO,
:OLD.CD_EMPRESA_DESTINO,
:NEW.CD_SOLSAI_PRO,
:OLD.CD_SOLSAI_PRO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_MGES_ADS_UNI_PRO
AFTER INSERT OR DELETE OR UPDATE OF CD_UNI_PRO,CD_UNIDADE,CD_PRODUTO,DS_UNIDADE,VL_FATOR,TP_RELATORIOS,SN_ATIVO  ON DBAMV.UNI_PRO
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_TP_OPERACAO_PROCESSO VARCHAR2(30);
BEGIN
IF INSERTING THEN
V_TP_OPERACAO_PROCESSO := 'INSERT';
END IF;
IF UPDATING THEN
V_TP_OPERACAO_PROCESSO := 'UPDATE';
END IF;
IF DELETING THEN
V_TP_OPERACAO_PROCESSO := 'DELETE';
END IF;
INSERT INTO DBAMV.AUDIT_SUPRIMENTOS (
CD_AUDIT_SUPRIMENTOS,
NM_OBJETO,
DT_AUDIT_SUPRIMENTOS,
TP_OPERACAO_PROCESSO,
DS_USUARIO_PROCESSO,
DS_USUARIO_LOGADO,
DS_OPERACAO_REALIZADA,
DS_TELA_PROCESSO,
DS_HOST_PROCESSO,
CD_UNI_PRO,
CD_UNI_PRO_OLD,
CD_UNIDADE,
CD_UNIDADE_OLD,
CD_PRODUTO,
CD_PRODUTO_OLD,
DS_UNIDADE,
DS_UNIDADE_OLD,
VL_FATOR,
VL_FATOR_OLD,
TP_RELATORIOS,
TP_RELATORIOS_OLD,
SN_ATIVO,
SN_ATIVO_OLD,
CD_SID)
VALUES( DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,
'UNI_PRO',
SYSDATE,
V_TP_OPERACAO_PROCESSO,
SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),
SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),
DBMS_UTILITY.FORMAT_CALL_STACK,
SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),
SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),
:NEW.CD_UNI_PRO,
:OLD.CD_UNI_PRO,
:NEW.CD_UNIDADE,
:OLD.CD_UNIDADE,
:NEW.CD_PRODUTO,
:OLD.CD_PRODUTO,
:NEW.DS_UNIDADE,
:OLD.DS_UNIDADE,
:NEW.VL_FATOR,
:OLD.VL_FATOR,
:NEW.TP_RELATORIOS,
:OLD.TP_RELATORIOS,
:NEW.SN_ATIVO,
:OLD.SN_ATIVO,
SYS_CONTEXT('USERENV', 'SID'));
END;
/
CREATE OR REPLACE TRIGGER DBAMV.TRG_AUDIT_DDL_SUPRIMENTOS AFTER DDL ON SCHEMA
DECLARE
  V_SQL_TEXT_LIST  DBMS_STANDARD.ORA_NAME_LIST_T;
  V_SQL_TEXT_COUNT BINARY_INTEGER;
  V_COMANDO VARCHAR2(200);
BEGIN
   BEGIN
      IF ORA_DICT_OBJ_TYPE = 'TRIGGER' THEN
          V_SQL_TEXT_COUNT := ORA_SQL_TXT(V_SQL_TEXT_LIST);
          FOR V_I IN 1..V_SQL_TEXT_COUNT
          LOOP
          V_COMANDO := V_COMANDO || 'SQLTEXT(' || V_I || ')=' || V_SQL_TEXT_LIST(V_I);
          END LOOP;
        END IF;
    EXCEPTION
         WHEN OTHERS THEN
         NULL;
   END;
  IF (ORA_SYSEVENT NOT IN ('TRUNCATE','COMMENT'))
  THEN
    INSERT INTO DBAMV.AUDIT_SUPRIMENTOS(CD_AUDIT_SUPRIMENTOS, NM_OBJETO,DT_AUDIT_SUPRIMENTOS, TP_OPERACAO_PROCESSO, DS_USUARIO_PROCESSO, DS_USUARIO_LOGADO, DS_OPERACAO_REALIZADA, DS_TELA_PROCESSO, DS_HOST_PROCESSO,TP_OBJETO, DS_COMANDO,CD_SID)
    VALUES(DBAMV.SEQ_AUDIT_SUPRIMENTOS.NEXTVAL,SUBSTR(ORA_DICT_OBJ_NAME,0,30),SYSDATE,ORA_SYSEVENT,SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 2000),SUBSTR(SYS_CONTEXT('USERENV','CURRENT_USER'), 1, 2000),DBMS_UTILITY.FORMAT_CALL_STACK,SubStr(SYS_CONTEXT('USERENV', 'MODULE'), 1, 2000),SubStr(SYS_CONTEXT('USERENV', 'HOST'), 1, 2000),ORA_DICT_OBJ_TYPE,REPLACE(V_COMANDO,'"',''),SYS_CONTEXT('USERENV', 'SID'));
  END IF;
END;
/
CREATE OR REPLACE FUNCTION DBAMV.FNC_MGES_RET_AUDIT_SUPRIMENTOS(P_CD_AUDIT_SUPRIMENTOS NUMBER)  
RETURN CLOB IS

CURSOR C_AUDIT_SUPRIMENTOS IS 
select 'insert into ' || table_name || ' (' ||
rtrim( xmlquery ('for $i in ROW/* return concat(name($i),",")' passing t.column_value.extract('ROW') returning content),',') || ') values (' ||
utl_i18n.unescape_reference(rtrim( xmlquery ('for $i in ROW/* return concat("''", $i, "''",",")' passing t.column_value.extract('ROW') returning content),',')) || ');' ins_stmt
from user_tables, xmltable('ROW' passing dbms_xmlgen.getxmltype('select * from ' || table_name ||' where CD_AUDIT_SUPRIMENTOS = '||P_CD_AUDIT_SUPRIMENTOS).extract('ROWSET/ROW')) t
where table_name = 'AUDIT_SUPRIMENTOS';

VRETURNO CLOB;
BEGIN
  BEGIN
      OPEN C_AUDIT_SUPRIMENTOS;
      FETCH C_AUDIT_SUPRIMENTOS INTO VRETURNO;
      CLOSE C_AUDIT_SUPRIMENTOS;
   EXCEPTION
        WHEN Others THEN
        VRETURNO :='' ;
  END;


  RETURN VRETURNO;
END;
/
GRANT EXECUTE ON DBAMV.FNC_MGES_RET_AUDIT_SUPRIMENTOS TO MV2000;






  
